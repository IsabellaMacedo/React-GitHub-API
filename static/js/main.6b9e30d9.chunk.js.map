{"version":3,"sources":["images/login-img.svg","context/mockData.js/mockUser.js","context/mockData.js/mockRepos.js","context/mockData.js/mockModal.js","context/mockData.js/mockFollowers.js","context/context.js","components/Info.js","components/Repos.js","components/Card.js","components/Followers.js","components/User.js","components/Search.js","components/Navbar.js","pages/Homepage.js","pages/Login.js","pages/Error.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","GithubContext","React","createContext","GithubProvider","children","useState","mockUser","githubUser","setGithubUser","mockRepos","repos","setRepos","mockModal","details","mockFollowers","followers","setFollowers","requests","setRequests","isLoading","setIsLoading","show","msg","error","setError","searchGithubUser","user","a","toggleError","axios","catch","err","console","log","response","data","login","followers_url","repos_url","then","checkRequests","remaining","rate","useEffect","Provider","value","Item","icon","label","color","className","Wrapper","styled","section","UserInfo","useContext","public_repos","following","public_gists","items","id","map","item","key","article","Repos","index","name","description","forks","language","html_url","href","target","Card","avatar_url","company","blog","bio","location","src","alt","Followers","follower","img","div","User","ErrorWrapper","Search","setUser","onSubmit","e","preventDefault","type","placeholder","onChange","nav","Navbar","Homepage","Info","initialState","password","Login","values","setValues","history","setToken","useHistory","event","token","push","loginimg","htmlFor","theme","rounded","Error","to","App","path","exact","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,uC,oLCA5B,KCAA,KCAA,KCAA,K,iBCUTC,EAAgBC,IAAMC,gBAEtBC,EAAiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACHC,mBAASC,GADN,mBAChCC,EADgC,KACpBC,EADoB,OAEbH,mBAASI,GAFI,mBAEhCC,EAFgC,KAEzBC,EAFyB,OAGTN,mBAASO,GAHA,mBAGhCC,EAHgC,aAILR,mBAASS,IAJJ,mBAIhCC,EAJgC,KAIrBC,EAJqB,OAMPX,mBAAS,GANF,mBAMhCY,EANgC,KAMtBC,EANsB,OAOLb,oBAAS,GAPJ,mBAOhCc,EAPgC,KAOrBC,EAPqB,OAQbf,mBAAS,CAAEgB,MAAM,EAAOC,IAAK,KARhB,mBAQhCC,EARgC,KAQzBC,EARyB,KAWjCC,EAAgB,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DAEvBC,IACAR,GAAa,GAHU,SAIAS,IAAM,GAAD,OAnBd,iCAmBc,OAAgBH,IAAQI,OAAM,SAACC,GAAD,OACxDC,QAAQC,IAAIF,MALS,QAIjBG,EAJiB,SAUrB1B,EAAc0B,EAASC,MAFX,EAGgCD,EAASC,KAHzC,EAGJC,MAAOC,EAHH,EAGGA,cAAeC,EAHlB,EAGkBA,UAG9BT,IAAM,GAAD,OAAIS,IAAaC,MAAK,SAACL,GAAD,OAAcvB,EAASuB,EAASC,SAG3DN,IAAM,GAAD,OAAIQ,IAAiBE,MAAK,SAACL,GAAD,OAAclB,EAAakB,EAASC,UAGnEP,GAAY,EAAM,iCAEpBY,IACApB,GAAa,GAvBU,2CAAH,sDA2BhBoB,EAAgB,WACpBX,IA5CW,qCA6CRU,MAAK,YAAe,IAETE,EAFQ,EAAXN,KAELO,KAAQD,UAEVvB,EAAYuB,GACM,IAAdA,GACFb,GACE,EACA,6EAILE,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,OAIhC,SAASH,EAAYP,EAAMC,GACzBE,EAAS,CAAEH,OAAMC,QAMnB,OAFAqB,oBAAUH,EAAe,IAGvB,kBAACxC,EAAc4C,SAAf,CACEC,MAAO,CACLtC,aACAG,QACAG,UACAE,YACAE,WACAM,QACAE,mBACAN,cAGDf,I,woCClFP,IAiDM0C,EAAO,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,MAAOH,EAAmB,EAAnBA,MAAOI,EAAY,EAAZA,MAClC,OACE,6BAASC,UAAU,QACjB,0BAAMA,UAAWD,GAAQF,GACzB,6BACE,4BAAKF,GACL,2BAAIG,MAMNG,EAAUC,IAAOC,QAAV,KAoDEC,EAjHE,WAAO,IACd/C,EAAeN,IAAMsD,WAAWvD,GAAhCO,WACAiD,EAAqDjD,EAArDiD,aAAczC,EAAuCR,EAAvCQ,UAAW0C,EAA4BlD,EAA5BkD,UAAWC,EAAiBnD,EAAjBmD,aAEtCC,EAAQ,CACZ,CACEC,GAAI,EACJb,KAAM,kBAAC,IAAD,CAAQG,UAAU,SACxBF,MAAO,kBACPH,MAAOW,EACPP,MAAO,QAGT,CACEW,GAAI,EACJb,KAAM,kBAAC,IAAD,CAASG,UAAU,SACzBF,MAAO,aACPH,MAAO9B,EACPkC,MAAO,SAGT,CACEW,GAAI,EACJb,KAAM,kBAAC,IAAD,CAAYG,UAAU,SAC5BF,MAAO,WACPH,MAAOY,EACPR,MAAO,UAGT,CACEW,GAAI,EACJb,KAAM,kBAAC,IAAD,CAAQG,UAAU,SACxBF,MAAO,QACPH,MAAOa,EACPT,MAAO,WAIX,OACE,6BAASC,UAAU,WACjB,kBAACC,EAAD,CAASD,UAAU,kBAChBS,EAAME,KAAI,SAACC,GACV,OAAO,kBAAC,EAAD,eAAMC,IAAKD,EAAKF,IAAQE,U,m4CC5CzC,IA0BMX,EAAUC,IAAOY,QAAV,KAyDEC,EAnFD,WAAO,IACXvD,EAAUT,IAAMsD,WAAWvD,GAA3BU,MAER,OACE,kBAAC,EAAD,CAASwC,UAAU,kBACjB,yBAAKA,UAAU,SACZxC,EAAMmD,KAAI,SAACnD,EAAOwD,GAAW,IACpBC,EAAiDzD,EAAjDyD,KAAMC,EAA2C1D,EAA3C0D,YAAaC,EAA8B3D,EAA9B2D,MAAOC,EAAuB5D,EAAvB4D,SAAUC,EAAa7D,EAAb6D,SAC5C,OACE,6BAASR,IAAKG,GACZ,6BACE,uBAAGM,KAAMD,EAAUE,OAAO,UACxB,qCAAWN,GACX,gDAAgBC,GAAe,qBAC/B,sCAAYC,GACZ,0CAAgBC,GAAY,8B,q3DCf9C,IAuCMnB,EAAUC,IAAOY,QAAV,KAgFEU,EAvHF,WAAO,IACVnE,EAAeN,IAAMsD,WAAWvD,GAAhCO,WAENoE,EAOEpE,EAPFoE,WACAJ,EAMEhE,EANFgE,SACAJ,EAKE5D,EALF4D,KACAS,EAIErE,EAJFqE,QACAC,EAGEtE,EAHFsE,KACAC,EAEEvE,EAFFuE,IACAC,EACExE,EADFwE,SAEF,OACE,kBAAC,EAAD,KACE,gCACE,yBAAKC,IAAKL,EAAYM,IAAKd,IAC3B,6BACE,4BAAKA,IAEP,uBAAGK,KAAMD,EAAUE,OAAO,UAA1B,mBAIF,uBAAGvB,UAAU,OAAO4B,GACpB,yBAAK5B,UAAU,SACb,2BACE,kBAAC,IAAD,MADF,IAC6B0B,GAAW,4BAExC,2BACE,kBAAC,IAAD,MAA8B,IAC7BG,GAAY,sCAEf,uBAAGP,KAAI,kBAAaK,GAAQJ,OAAO,UACjC,kBAAC,IAAD,MACCI,GAAQ,4B,oxCCjCnB,IAyBM1B,EAAUC,IAAOY,QAAV,KAmDEkB,EA5EG,WAAO,IACfnE,EAAcd,IAAMsD,WAAWvD,GAA/Be,UAER,OACE,kBAAC,EAAD,KACE,yBAAKmC,UAAU,aACZnC,EAAU8C,KAAI,SAACsB,EAAUjB,GAAW,IACfkB,EAAyBD,EAArCR,WAAiBJ,EAAoBY,EAApBZ,SAAUnC,EAAU+C,EAAV/C,MACnC,OACE,6BAAS2B,IAAKG,GACZ,yBAAKc,IAAKI,EAAKH,IAAK7C,IACpB,6BACE,4BAAKA,GACL,uBAAGoC,KAAMD,EAAUE,OAAO,UACvBF,W,6MCbnB,IAWMpB,EAAUC,IAAOiC,IAAV,KAUEC,EArBF,WACX,OACE,6BAASpC,UAAU,WACjB,kBAAC,EAAD,CAASA,UAAU,kBACjB,kBAAC,EAAD,MACA,kBAAC,EAAD,S,+0DCNR,IAyCMC,EAAUC,IAAOiC,IAAV,KAoEPE,EAAenC,IAAOY,QAAV,KAYHwB,EAzHA,WAAO,IAAD,EACKvF,IAAMI,SAAS,IADpB,mBACZqB,EADY,KACN+D,EADM,OAEsCxF,IAAMsD,WAC7DvD,GADMiB,EAFW,EAEXA,SAAUM,EAFC,EAEDA,MAAOE,EAFN,EAEMA,iBAAkBN,EAFxB,EAEwBA,UAW3C,OACE,6BAAS+B,UAAU,WACjB,kBAAC,EAAD,CAASA,UAAU,kBAChB3B,EAAMF,MACL,kBAACkE,EAAD,KACE,2BAAIhE,EAAMD,MAGd,0BAAMoE,SAfS,SAACC,GACpBA,EAAEC,iBACElE,GACFD,EAAiBC,KAab,yBAAKwB,UAAU,gBACb,kBAAC,IAAD,MACA,2BACE2C,KAAK,OACLC,YAAY,gCACZjD,MAAOnB,EACPqE,SAAU,SAACJ,GAAD,OAAOF,EAAQE,EAAElB,OAAO5B,UAEnC5B,EAAW,IAAME,GAChB,4BAAQ0E,KAAK,UAAb,eAIN,2EAA2C5E,EAA3C,a,ixBCpCR,IAcMkC,EAAUC,IAAO4C,IAAV,KAoCEC,EAlDA,WACb,OACE,kBAAC,EAAD,KACE,6BAAS/C,UAAU,kBACjB,kDACqB,yCADrB,MAKF,uBAAGsB,KAAK,KAAR,YCcS0B,EAtBE,WAEf,OADsBjG,IAAMsD,WAAWvD,GAA/BmB,UAGJ,8BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,OAMJ,8BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAACgF,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,24CCfN,SAASC,KACP,MAAO,CAAE1E,KAAM,GAAI2E,SAAU,IAU/B,IAwEMlD,GAAUC,IAAOC,QAAV,MAqEEiD,GA7ID,WAAO,IAAD,EACUjG,mBAAS+F,IADnB,mBACXG,EADW,KACHC,EADG,OAEQnG,mBAAS,MAFjB,mBAEXkB,EAFW,KAEJC,EAFI,KAIZiF,GADelD,qBAAWvD,GAAxB0G,SACQC,eAEhB,SAASZ,EAASa,GAAQ,IAAD,EACCA,EAAMnC,OAAtB5B,EADe,EACfA,MAAOsB,EADQ,EACRA,KAEfqC,EAAU,2BACLD,GADI,kBAENpC,EAAOtB,KAiBZ,OACE,kBAAC,GAAD,KACE,yBAAKK,UAAU,aACb,yBAAKA,UAAU,cACb,wBAAIA,UAAU,qBAAd,sBACA,0BAAMwC,SAlBd,SAAkBkB,GAChBA,EAAMhB,iBADiB,MAtB3B,YAAoC,IAAnBlE,EAAkB,EAAlBA,KAAM2E,EAAY,EAAZA,SACrB,MAAa,UAAT3E,GAAiC,aAAb2E,EACf,CAAEQ,MAAO,QAEX,CAAEtF,MAAO,gCAqBWa,CAAMmE,GAAvBM,EAHe,EAGfA,MAAOtF,EAHQ,EAGRA,MAEf,OAAIsF,EACKJ,EAAQK,KAAK,UAEtBtF,EAASD,GACTiF,EAAUJ,IACHK,EAAQK,KAAK,QASZ,yBAAK5D,UAAU,4BACb,yBAAK8B,IAAK+B,IAAU7D,UAAU,WAAW+B,IAAI,SAC7C,2BAAO+B,QAAQ,QAAf,eACA,2BACEpD,GAAG,OACHiC,KAAK,OACL1B,KAAK,OACL4B,SAAUA,EACVlD,MAAO0D,EAAO7E,QAGlB,yBAAKwB,UAAU,4BACb,2BAAO8D,QAAQ,YAAf,UACA,2BACEpD,GAAG,WACHiC,KAAK,WACL1B,KAAK,WACL4B,SAAUA,EACVlD,MAAO0D,EAAOF,YAGjB9E,GAAS,yBAAK2B,UAAU,qBAAqB3B,GAE9C,4BACEsE,KAAK,SACLoB,MAAM,kBACN/D,UAAU,4BACVgE,SAAO,GAJT,e,0TCtEZ,IAaM/D,GAAUC,IAAOC,QAAV,MAeE8D,GA5BD,WACZ,OACE,kBAAC,GAAD,KACE,6BACE,wCACA,2DACA,kBAAC,KAAD,CAAMC,GAAG,IAAIlE,UAAU,OAAvB,8BCkBOmE,OAxBf,WACE,OACE,kBAAC,KAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,GACrB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,SAASC,OAAO,GAC1B,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,eAAeC,OAAO,GAChC,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,QAAQC,OAAO,GACzB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,KACV,kBAAC,GAAD,UCTUE,QACW,cAA7BC,OAAO1C,SAAS2C,UAEe,UAA7BD,OAAO1C,SAAS2C,UAEhBD,OAAO1C,SAAS2C,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,KACE,kBAAC,GAAD,QAGJC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5F,MAAK,SAAA6F,GACJA,EAAaC,gBAEdvG,OAAM,SAAAP,GACLS,QAAQT,MAAMA,EAAM+G,c","file":"static/js/main.6b9e30d9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login-img.90cff973.svg\";","export default [];\n","export default [];\n","export default [];\n","export default [];\r\n","import React, { useState, useEffect, createContext } from \"react\";\nimport mockUser from \"./mockData.js/mockUser\";\nimport mockRepos from \"./mockData.js/mockRepos\";\nimport mockModal from \"./mockData.js/mockModal\";\nimport mockFollowers from \"./mockData.js/mockFollowers\";\nimport axios from \"axios\";\n\nconst reqUrl = \"https://api.github.com/rate_limit\";\nconst searchUrl = \"https://api.github.com/users/\";\n\nconst GithubContext = React.createContext();\n\nconst GithubProvider = ({ children }) => {\n  const [githubUser, setGithubUser] = useState(mockUser);\n  const [repos, setRepos] = useState(mockRepos);\n  const [details, setDetails] = useState(mockModal);\n  const [followers, setFollowers] = useState(mockFollowers);\n\n  const [requests, setRequests] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState({ show: false, msg: \"\" });\n\n  // search\n  const searchGithubUser = async (user) => {\n    // limpa o erro de pesquisa anterior, se tiver, já que o default é false.\n    toggleError();\n    setIsLoading(true);\n    const response = await axios(`${searchUrl}${user}`).catch((err) =>\n      console.log(err)\n    );\n\n    if (response) {\n      // Usuário\n      setGithubUser(response.data);\n      const { login, followers_url, repos_url } = response.data;\n\n      // Repositórios\n      axios(`${repos_url}`).then((response) => setRepos(response.data));\n\n      // Seguidores\n      axios(`${followers_url}`).then((response) => setFollowers(response.data));\n    } else {\n      // se não achar o usuário\n      toggleError(true, \"Usuário não encontrado.\");\n    }\n    checkRequests();\n    setIsLoading(false);\n  };\n\n  // requests\n  const checkRequests = () => {\n    axios(reqUrl)\n      .then(({ data }) => {\n        let {\n          rate: { remaining },\n        } = data;\n        setRequests(remaining);\n        if (remaining === 0) {\n          toggleError(\n            true,\n            \"Você atingiu o limite de 60 requisições/hora, aguarde 1 hora.\"\n          );\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  // error\n  function toggleError(show, msg) {\n    setError({ show, msg });\n  }\n\n  //useEffect\n  useEffect(checkRequests, []);\n\n  return (\n    <GithubContext.Provider\n      value={{\n        githubUser,\n        repos,\n        details,\n        followers,\n        requests,\n        error,\n        searchGithubUser,\n        isLoading,\n      }}\n    >\n      {children}\n    </GithubContext.Provider>\n  );\n};\n\nexport { GithubProvider, GithubContext };\n","import React from \"react\";\nimport { GithubContext } from \"../context/context\";\nimport styled from \"styled-components\";\nimport { GoRepo, GoGist } from \"react-icons/go\";\nimport { FiUsers, FiUserPlus } from \"react-icons/fi\";\n\nconst UserInfo = () => {\n  const { githubUser } = React.useContext(GithubContext);\n  const { public_repos, followers, following, public_gists } = githubUser;\n\n  const items = [\n    {\n      id: 1,\n      icon: <GoRepo className=\"icon\" />,\n      label: \"Repositórios\",\n      value: public_repos,\n      color: \"pink\",\n    },\n\n    {\n      id: 2,\n      icon: <FiUsers className=\"icon\" />,\n      label: \"Seguidores\",\n      value: followers,\n      color: \"green\",\n    },\n\n    {\n      id: 3,\n      icon: <FiUserPlus className=\"icon\" />,\n      label: \"Seguindo\",\n      value: following,\n      color: \"purple\",\n    },\n\n    {\n      id: 4,\n      icon: <GoGist className=\"icon\" />,\n      label: \"Gists\",\n      value: public_gists,\n      color: \"yellow\",\n    },\n  ];\n\n  return (\n    <section className=\"section\">\n      <Wrapper className=\"section-center\">\n        {items.map((item) => {\n          return <Item key={item.id} {...item}></Item>;\n        })}\n      </Wrapper>\n    </section>\n  );\n};\n\nconst Item = ({ icon, label, value, color }) => {\n  return (\n    <article className=\"item\">\n      <span className={color}>{icon}</span>\n      <div>\n        <h3>{value}</h3>\n        <p>{label}</p>\n      </div>\n    </article>\n  );\n};\n\nconst Wrapper = styled.section`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 1rem 2rem;\n  @media (min-width: 640px) {\n    grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));\n  }\n  .item {\n    border-radius: var(--radius);\n    padding: 1rem 2rem;\n    background: var(--clr-white);\n    display: grid;\n    grid-template-columns: auto 1fr;\n    column-gap: 3rem;\n    align-items: center;\n    span {\n      width: 3rem;\n      height: 3rem;\n      display: grid;\n      place-items: center;\n      border-radius: 50%;\n    }\n    .icon {\n      font-size: 1.5rem;\n    }\n    h3 {\n      margin-bottom: 0;\n      letter-spacing: 0;\n    }\n    p {\n      margin-bottom: 0;\n      text-transform: capitalize;\n    }\n    .pink {\n      background: #ffe0f0;\n      color: #da4a91;\n    }\n    .green {\n      background: var(--clr-primary-10);\n      color: var(--clr-primary-5);\n    }\n    .purple {\n      background: #e6e6ff;\n      color: #5d55fa;\n    }\n    .yellow {\n      background: #fffbea;\n      color: #f0b429;\n    }\n  }\n`;\n\nexport default UserInfo;\n","import React from \"react\";\nimport { GithubContext } from \"../context/context\";\nimport styled from \"styled-components\";\n\nconst Repos = () => {\n  const { repos } = React.useContext(GithubContext);\n\n  return (\n    <Wrapper className=\"section-center\">\n      <div className=\"repos\">\n        {repos.map((repos, index) => {\n          const { name, description, forks, language, html_url } = repos;\n          return (\n            <article key={index}>\n              <div>\n                <a href={html_url} target=\"_blank\">\n                  <h4>Nome: {name}</h4>\n                  <h5>Descrição: {description || \"Não Informada.\"}</h5>\n                  <h5>Forks: {forks}</h5>\n                  <h5>Linguagem: {language || \"Não Informada.\"}</h5>\n                </a>\n              </div>\n            </article>\n          );\n        })}\n      </div>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.article`\n  background: var(--clr-white);\n  border-top-right-radius: var(--radius);\n  border-bottom-left-radius: var(--radius);\n  border-bottom-right-radius: var(--radius);\n  position: relative;\n  &::before {\n    content: \"Lista de Repositórios\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    transform: translateY(-100%);\n    background: var(--clr-white);\n    color: var(--clr-grey-5);\n    border-top-right-radius: var(--radius);\n    border-top-left-radius: var(--radius);\n    text-transform: capitalize;\n    padding: 0.5rem 1rem 0 1rem;\n    letter-spacing: var(--spacing);\n    font-size: 1rem;\n  }\n  .repos {\n    overflow: auto;\n    height: 600px;\n    display: grid;\n    grid-template-rows: repeat(auto-fill, minmax(100px, 1fr));\n    margin-top: 3rem;\n    gap: 1.25rem 1rem;\n    padding: 1rem 2rem;\n  }\n  article {\n    transition: var(--transition);\n    padding: 0.15rem 0.5rem;\n    border-radius: var(--radius);\n    display: grid;\n    grid-template-columns: auto 1fr;\n    align-items: center;\n    column-gap: 1rem;\n    img {\n      height: 100%;\n      width: 45px;\n      border-radius: 50%;\n      object-fit: cover;\n    }\n    h4 {\n      margin-bottom: 0.2;\n      color: var(--clr-primary-5);\n    }\n    h5 {\n      margin-bottom: 0.2;\n    }\n    a {\n      color: var(--black);\n    }\n  }\n`;\n\nexport default Repos;\n","import React from \"react\";\nimport { GithubContext } from \"../context/context\";\nimport styled from \"styled-components\";\nimport { MdBusiness, MdLocationOn, MdLink } from \"react-icons/md\";\nconst Card = () => {\n  const { githubUser } = React.useContext(GithubContext);\n  const {\n    avatar_url,\n    html_url,\n    name,\n    company,\n    blog,\n    bio,\n    location,\n  } = githubUser;\n  return (\n    <Wrapper>\n      <header>\n        <img src={avatar_url} alt={name} />\n        <div>\n          <h3>{name}</h3>\n        </div>\n        <a href={html_url} target=\"_blank\">\n          Ir para GitHub\n        </a>\n      </header>\n      <p className=\"bio\">{bio}</p>\n      <div className=\"links\">\n        <p>\n          <MdBusiness></MdBusiness> {company || \"Empresa não informada\"}\n        </p>\n        <p>\n          <MdLocationOn></MdLocationOn>{\" \"}\n          {location || \"Localização não informada\"}\n        </p>\n        <a href={`https://${blog}`} target=\"_blank\">\n          <MdLink></MdLink>\n          {blog || \"Blog não informado\"}\n        </a>\n      </div>\n    </Wrapper>\n  );\n};\nconst Wrapper = styled.article`\n  background: var(--clr-white);\n  padding: 1.5rem 2rem;\n  border-top-right-radius: var(--radius);\n  border-bottom-left-radius: var(--radius);\n  border-bottom-right-radius: var(--radius);\n  position: relative;\n  &::before {\n    content: \"Perfil do Usuário\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    transform: translateY(-100%);\n    background: var(--clr-white);\n    color: var(--clr-grey-5);\n    border-top-right-radius: var(--radius);\n    border-top-left-radius: var(--radius);\n    text-transform: capitalize;\n    padding: 0.5rem 1rem 0 1rem;\n    letter-spacing: var(--spacing);\n    font-size: 1rem;\n  }\n  header {\n    display: grid;\n    grid-template-columns: auto 1fr auto;\n    align-items: center;\n    column-gap: 1rem;\n    margin-bottom: 1rem;\n    img {\n      width: 60px;\n      height: 60px;\n      border-radius: 60%;\n    }\n    h4 {\n      margin-bottom: 0.25rem;\n    }\n    p {\n      margin-bottom: 0;\n    }\n    a {\n      color: var(--clr-primary-5);\n      border: 1px solid var(--clr-primary-5);\n      padding: 0.25rem 0.75rem;\n      border-radius: 1rem;\n      text-transform: capitalize;\n      letter-spacing: var(--spacing);\n      transition: var(--transition);\n      cursor: pointer;\n      &:hover {\n        background: var(--clr-primary-5);\n        color: var(--clr-white);\n      }\n    }\n  }\n  .bio {\n    color: var(--clr-grey-3);\n  }\n  .links {\n    p,\n    a {\n      margin-bottom: 0.25rem;\n      display: flex;\n      align-items: center;\n      svg {\n        margin-right: 0.5rem;\n        font-size: 1.3rem;\n      }\n    }\n    a {\n      color: var(--clr-primary-5);\n      transition: var(--transition);\n      svg {\n        color: var(--clr-grey-5);\n      }\n      &:hover {\n        color: var(--clr-primary-3);\n      }\n    }\n  }\n`;\nexport default Card;\n","import React from \"react\";\nimport { GithubContext } from \"../context/context\";\nimport styled from \"styled-components\";\n\nconst Followers = () => {\n  const { followers } = React.useContext(GithubContext);\n\n  return (\n    <Wrapper>\n      <div className=\"followers\">\n        {followers.map((follower, index) => {\n          const { avatar_url: img, html_url, login } = follower;\n          return (\n            <article key={index}>\n              <img src={img} alt={login} />\n              <div>\n                <h4>{login}</h4>\n                <a href={html_url} target=\"_blank\">\n                  {html_url}\n                </a>\n              </div>\n            </article>\n          );\n        })}\n      </div>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.article`\n  background: var(--clr-white);\n  border-top-right-radius: var(--radius);\n  border-bottom-left-radius: var(--radius);\n  border-bottom-right-radius: var(--radius);\n  position: relative;\n  &::before {\n    content: \"Seguidores\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    transform: translateY(-100%);\n    background: var(--clr-white);\n    color: var(--clr-grey-5);\n    border-top-right-radius: var(--radius);\n    border-top-left-radius: var(--radius);\n    text-transform: capitalize;\n    padding: 0.5rem 1rem 0 1rem;\n    letter-spacing: var(--spacing);\n    font-size: 1rem;\n  }\n  .followers {\n    overflow: auto;\n    height: 270px;\n    display: grid;\n    grid-template-rows: repeat(auto-fill, minmax(40px, 1fr));\n    gap: 1.25rem 1rem;\n    padding: 1rem 2rem;\n  }\n  article {\n    transition: var(--transition);\n    padding: 0.15rem 0.5rem;\n    border-radius: var(--radius);\n    display: grid;\n    grid-template-columns: auto 1fr;\n    align-items: center;\n    column-gap: 1rem;\n    img {\n      height: 100%;\n      width: 45px;\n      border-radius: 50%;\n      object-fit: cover;\n    }\n    h4 {\n      margin-bottom: 0;\n    }\n    a {\n      color: var(--clr-grey-5);\n    }\n  }\n`;\nexport default Followers;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Card from \"./Card\";\nimport Followers from \"./Followers\";\n\nconst User = () => {\n  return (\n    <section className=\"section\">\n      <Wrapper className=\"section-center\">\n        <Card></Card>\n        <Followers></Followers>\n      </Wrapper>\n    </section>\n  );\n};\n\nconst Wrapper = styled.div`\n  padding-top: 2rem;\n  display: grid;\n  gap: 3rem 2rem;\n\n  @media (min-width: 992px) {\n    grid-template-columns: 1fr 1fr;\n  }\n`;\n\nexport default User;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { MdSearch } from \"react-icons/md\";\nimport { GithubContext } from \"../context/context\";\nconst Search = () => {\n  const [user, setUser] = React.useState(\"\");\n  const { requests, error, searchGithubUser, isLoading } = React.useContext(\n    GithubContext\n  );\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (user) {\n      searchGithubUser(user);\n    }\n  };\n\n  return (\n    <section className=\"section\">\n      <Wrapper className=\"section-center\">\n        {error.show && (\n          <ErrorWrapper>\n            <p>{error.msg}</p>\n          </ErrorWrapper>\n        )}\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-control\">\n            <MdSearch />\n            <input\n              type=\"text\"\n              placeholder=\"Busca de usuário no GitHub\"\n              value={user}\n              onChange={(e) => setUser(e.target.value)}\n            />\n            {requests > 0 && !isLoading && (\n              <button type=\"submit\">Pesquisar</button>\n            )}\n          </div>\n        </form>\n        <h4>Requisições restantes (para este IP): {requests} / 60 </h4>\n      </Wrapper>\n    </section>\n  );\n};\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: grid;\n  gap: 1rem 1.75rem;\n  @media (min-width: 768px) {\n    grid-template-columns: 1fr max-content;\n    align-items: center;\n    h3 {\n      padding: 0 0.5rem;\n    }\n  }\n  .form-control {\n    background: var(--clr-white);\n    display: grid;\n    align-items: center;\n    grid-template-columns: auto 1fr auto;\n    column-gap: 0.5rem;\n    border-radius: 5px;\n    padding: 0.5rem;\n    input {\n      border-color: transparent;\n      outline-color: var(--clr-grey-10);\n      letter-spacing: var(--spacing);\n      color: var(--clr-grey-3);\n      padding: 0.25rem 0.5rem;\n    }\n    input::placeholder {\n      color: var(--clr-grey-3);\n      text-transform: capitalize;\n      letter-spacing: var(--spacing);\n    }\n    button {\n      border-radius: 5px 0px;\n      border-color: transparent;\n      padding: 0.25rem 0.5rem;\n      text-transform: capitalize;\n      letter-spacing: var(--spacing);\n      background: var(--clr-primary-5);\n      color: var(--clr-white);\n      transition: var(--transition);\n      cursor: pointer;\n      &:hover {\n        background: var(--clr-primary-8);\n        color: var(--clr-primary-1);\n      }\n    }\n    svg {\n      color: var(--clr-grey-5);\n    }\n    input,\n    button,\n    svg {\n      font-size: 1.3rem;\n    }\n    @media (max-width: 800px) {\n      button,\n      input,\n      svg {\n        font-size: 0.85rem;\n      }\n    }\n  }\n  h3 {\n    margin-bottom: 0;\n    color: var(--clr-grey-5);\n    font-weight: 400;\n  }\n`;\nconst ErrorWrapper = styled.article`\n  position: absolute;\n  width: 90vw;\n  top: 0;\n  left: 0;\n  transform: translateY(-100%);\n  text-transform: capitalize;\n  p {\n    color: red;\n    letter-spacing: var(--spacing);\n  }\n`;\nexport default Search;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Navbar = () => {\n  return (\n    <Wrapper>\n      <section className=\"section-center\">\n        <h4>\n          Seja bem vindo(a), <strong>Admin</strong>!\n        </h4>\n      </section>\n\n      <a href=\"/\">LogOut</a>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.nav`\n  padding: 1.5rem;\n  margin-bottom: 4rem;\n  background: var(--clr-white);\n  text-align: center;\n  display: grid;\n  grid-template-columns: auto auto 100px;\n  justify-content: center;\n  align-items: center;\n  gap: 1.5rem;\n  h4 {\n    margin-bottom: 0;\n    font-weight: 400;\n  }\n  img {\n    width: 35px !important;\n    height: 35px;\n    border-radius: 50%;\n    object-fit: cover;\n  }\n  button {\n    background: transparent;\n    justify-content: right;\n    border: transparent;\n    font-size: 1.2rem;\n    text-transform: capitalize;\n    letter-spacing: var(--spacing);\n    color: var(--clr-grey-5);\n    cursor: pointer;\n  }\n  a {\n    justify-content: right;\n    align-items: right;\n  }\n`;\n\nexport default Navbar;\n","import React from \"react\";\nimport { Info, Repos, User, Search, Navbar } from \"../components\";\nimport { GithubContext } from \"../context/context\";\n\nconst Homepage = () => {\n  const { isLoading } = React.useContext(GithubContext);\n  if (isLoading) {\n    return (\n      <main>\n        <Navbar />\n        <Search />\n      </main>\n    );\n  }\n\n  return (\n    <main>\n      <Navbar></Navbar>\n      <Search />\n      <Info />\n      <User />\n      <Repos />\n    </main>\n  );\n};\n\nexport default Homepage;\n","import React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { GithubContext } from \"../context/context\";\nimport styled from \"styled-components\";\nimport loginimg from \"../images/login-img.svg\";\n\nfunction initialState() {\n  return { user: \"\", password: \"\" };\n}\n\nfunction login({ user, password }) {\n  if (user === \"admin\" && password === \"password\") {\n    return { token: \"1234\" };\n  }\n  return { error: \"Usuário/senha incorretos.\" };\n}\n\nconst Login = () => {\n  const [values, setValues] = useState(initialState);\n  const [error, setError] = useState(null);\n  const { setToken } = useContext(GithubContext);\n  const history = useHistory();\n\n  function onChange(event) {\n    const { value, name } = event.target;\n\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  }\n\n  function onSubmit(event) {\n    event.preventDefault();\n\n    const { token, error } = login(values);\n\n    if (token) {\n      return history.push(\"/home\");\n    }\n    setError(error);\n    setValues(initialState);\n    return history.push(\"/\");\n  }\n\n  return (\n    <Wrapper>\n      <div className=\"container\">\n        <div className=\"user-login\">\n          <h3 className=\"user-login__title\">Busca - API GitHub</h3>\n          <form onSubmit={onSubmit}>\n            <div className=\"user-login__form-control\">\n              <img src={loginimg} className=\"App-logo\" alt=\"logo\" />\n              <label htmlFor=\"user\">Usuário </label>\n              <input\n                id=\"user\"\n                type=\"text\"\n                name=\"user\"\n                onChange={onChange}\n                value={values.user}\n              />\n            </div>\n            <div className=\"user-login__form-control\">\n              <label htmlFor=\"password\">Senha </label>\n              <input\n                id=\"password\"\n                type=\"password\"\n                name=\"password\"\n                onChange={onChange}\n                value={values.password}\n              />\n            </div>\n            {error && <div className=\"user-login__error\">{error}</div>}\n\n            <button\n              type=\"submit\"\n              theme=\"contained-green\"\n              className=\"user-login__submit-button\"\n              rounded\n            >\n              Entrar\n            </button>\n          </form>\n        </div>\n      </div>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.section`\n  min-height: 100vh;\n  display: grid;\n  place-items: center;\n  .container {\n    width: 90vw;\n    max-width: 600px;\n    text-align: center;\n  }\n  img {\n    margin-bottom: 2rem;\n  }\n  h1 {\n    margin-bottom: 1.5rem;\n  }\n  .user-login {\n    width: 400px;\n    margin: 0 auto;\n  }\n\n  .user-login__title {\n    font-size: 40px;\n    color: #0abde3;\n    margin-bottom: 50px;\n    text-align: center;\n  }\n\n  .user-login__form-control {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 10px;\n  }\n\n  .user-login__form-control label {\n    margin-bottom: 5px;\n    color: #979797;\n    font-size: 16px;\n  }\n\n  .user-login__form-control input {\n    border-radius: 4px;\n    border: 1px solid #bbbbbb;\n    height: 36px;\n    padding: 5px 10px;\n  }\n\n  .user-login__form-control input:focus {\n    outline: 0;\n    border-color: #5988df;\n  }\n\n  button {\n    border-radius: 5px;\n    border-color: transparent;\n    padding: 0.5rem 0.5rem;\n    text-transform: capitalize;\n    font-size: 16px;\n    letter-spacing: var(--spacing);\n    background: var(--clr-primary-5);\n    color: var(--clr-white);\n    transition: var(--transition);\n    cursor: pointer;\n    &:hover {\n      background: var(--clr-primary-8);\n      color: var(--clr-primary-1);\n    }\n  }\n`;\n\nexport default Login;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Error = () => {\n  return (\n    <Wrapper>\n      <div>\n        <h1>Erro 404</h1>\n        <h3>Página não encontrada</h3>\n        <Link to=\"/\" className=\"btn\">\n          Voltar para o Início\n        </Link>\n      </div>\n    </Wrapper>\n  );\n};\nconst Wrapper = styled.section`\n  min-height: 100vh;\n  display: grid;\n  place-items: center;\n  background: var(--clr-primary-10);\n  text-align: center;\n  h1 {\n    font-size: 5rem;\n  }\n  h3 {\n    color: var(--clr-grey-3);\n    margin-bottom: 1.5rem;\n  }\n`;\n\nexport default Error;\n","import React from \"react\";\nimport { Homepage, Login, Error } from \"./pages\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact={true}>\n          <Login></Login>\n        </Route>\n        <Route path=\"/login\" exact={true}>\n          <Login></Login>\n        </Route>\n        <Route path=\"/desafio_git\" exact={true}>\n          <Login></Login>\n        </Route>\n        <Route path=\"/home\" exact={true}>\n          <Homepage></Homepage>\n        </Route>\n        <Route path=\"*\">\n          <Error></Error>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { GithubProvider } from \"./context/context\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <GithubProvider>\n      <App />\n    </GithubProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}